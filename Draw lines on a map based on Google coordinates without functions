############################################################################################################
# GUI Author: "Marius Selegean"                                                                            #
# Email: "marius.selegean@yahoo.com"                                                                       #
# Description: Draw lines on a map based on Google coordinates                                             #
# Date: 19.04.2023                                                                                         #
############################################################################################################
"""
How to use:
1. Enter an approximate latitude and longitude. Basically this will be center of the map.
2. Enter the number of coordinates you want to use
3. Enter coordinates in this format: 46.712683817744036, 23.714053231996452
    - you can click right on Google Maps on a point you want to add and copy into the code.
4. After coordinates are inserted, the application will open automatically the web browser
   showing lines between coordinates inserted.
"""
import folium
import webbrowser
import os

# This will line will open the map centered on specified point.
lat, lon = map(float, input("Enter the latitude and longitude, separated by a comma (ex: 46.73xx, 23.71xx): ").split(','))


# Create the map with the user-input location
my_map = folium.Map(location=[lat, lon], zoom_start=14)

# define a list of coordinates
num_coords = int(input("How many coordinates do you want to input? "))

#gathering coordinates by user input
coordinates = []

for i in range(num_coords):
    coord_str = input("Enter the coordinates separated by a comma (ex: 46.73xx, 23.71xx): ")
    x, y = map(float, coord_str.split(","))
    coordinates.append((x, y))


# loop through the coordinates and draw lines between them
for i in range(len(coordinates)-1):
    start = coordinates[i]
    end = coordinates[i+1]
    folium.PolyLine(locations=[start, end], color='red').add_to(my_map)

# Save and display the map in default browser.
my_map.save("maps.html")
webbrowser.open('file://' + os.path.realpath("maps.html"))

# end of script.
